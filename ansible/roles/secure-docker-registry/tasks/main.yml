# docker-registry/tasks/main.yml
---

- name: create the certs directory
  tags: secure_registry
  file: path="{{ playbook_dir }}/../dockerfiles/framework/secure_registry/certs" state=directory

- name: create the certs
  command: "openssl req -newkey rsa:4096 -nodes -sha256 -subj '/C=/ST=/L=/O=CN=/' -keyout certs/domain.key -x509 -days 365 -out certs/domain.crt" 
  args:
    chdir: "{{ playbook_dir }}/../dockerfiles/framework/secure_registry/"

- name: create the trust directory
  tags: secure_registry
  file: path="{{ httpd_data_dir }}/certs" state=directory

- name: copy certs to the scale cert directory
  tags: secure_registry
  copy: src="{{ playbook_dir }}/../dockerfiles/framework/secure_registry/certs/domain.crt" dest="{{ httpd_data_dir }}/certs"

- name: create the trust directory
  tags: secure_registry
  file: path=/etc/docker/certs.d/localhost:5000/ state=directory
  become: true

- name: copy the certs to the docker trust directory
  tags: secure_registry
  copy: src="{{ httpd_data_dir }}/certs/domain.crt" dest="/etc/docker/certs.d/localhost:5000/ca.crt"
  become: true
#  
#- name: restart docker
#  tags: secure_registry
#  service: name=docker state=restarted
#  become: true

- name: copy repo conf file to the secure_registry docker folder
  tags: secure_registry
  copy: src="{{ item }}" dest="{{ playbook_dir }}/../dockerfiles/framework/secure_registry/"
  with_fileglob:
    - /etc/yum.repos.d/*.repo
  become: true
  
- name: Build secure registry docker image
  tags: secure_registry
  docker_image:
    path: "{{ playbook_dir }}/../dockerfiles/framework/secure_registry"
    name: "secure_scale_registry"
    tag: "1"
    state: build
    nocache: yes
  become: true

- name: Start secure docker registry
  tags: secure_registry
  docker:
    name: secure_registry
    image: 'secure_scale_registry:1'
    state: started
    restart_policy: always
    env:
      REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt
      REGISTRY_HTTP_TLS_KEY=/certs/domain.key
    ports:
      - "5000:5000"
  become: true
